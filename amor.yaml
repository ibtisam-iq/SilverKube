apiVersion: v1
kind: Namespace
metadata:
  name: amor

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: amor
  labels:
    app: amor
  namespace: amor  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: amor
  template:
    metadata:
      labels:
        app: amor
    spec:
      containers:
        - name: amor
          image: ghcr.io/ibtisam-iq/amor:latest
          ports:
            - containerPort: 8081
              # hostPort: 8081 
              protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: amor
  namespace: amor
  labels:
    app: amor
spec:
  selector:
    app: amor
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8081
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: amor-nodeport
  namespace: amor
  labels:
    app: amor
spec:
  selector:
    app: amor
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081 
      nodePort: 30000
  type: NodePort

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: amor
  namespace: amor
  annotations:    # Reason to add: backend app is serving content at / only, but you're exposing it under /amor
    nginx.ingress.kubernetes.io/rewrite-target: / 
spec:
  ingressClassName: nginx
  rules:
  - host: local.ibtisam-iq.com
    http:
      paths:
      - path: /amor
        pathType: Prefix
        backend:
          service:
            name: amor
            port:
              number: 80

# This tells NGINX to strip /amor from the URL before sending the request to your backend â€” 
# so a request to /amor becomes / inside the Pod.